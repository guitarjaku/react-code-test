{"ast":null,"code":"var _jsxFileName = \"/Users/g4rtu1/code-test/nextjs-my-structure-master/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, Fragment } from \"react\";\nimport DatePicker, { registerLocale } from \"react-datepicker\";\nimport th from \"date-fns/locale/th\";\nimport { Container, Navbar, Row, Col } from \"react-bootstrap\";\nimport Pagination from \"react-js-pagination\";\nimport BlockUi from \"react-block-ui\";\nimport axios from \"axios\";\nregisterLocale(\"th\", th);\nconst http = axios.create({\n  // baseURL: process.env.api,\n  baseURL: \"http://my-json-server.typicode.com/guitarjaku/react-code-test\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});\n\nconst App = () => {\n  const {\n    0: date,\n    1: setDate\n  } = useState(new Date());\n  const {\n    0: time,\n    1: setTime\n  } = useState(new Date());\n  const {\n    0: sortFirstName,\n    1: setSortFirstName\n  } = useState(false);\n  const {\n    0: queryStatus,\n    1: setQuery\n  } = useState(\"\");\n  const {\n    0: activePage,\n    1: setActivePage\n  } = useState(1);\n  const {\n    0: blocking,\n    1: handleBlocking\n  } = useState(true);\n  const {\n    0: dataTable,\n    1: setDataTable\n  } = useState([]);\n  const options = [{\n    value: \"chocolate\",\n    label: \"Chocolate\"\n  }, {\n    value: \"strawberry\",\n    label: \"Strawberry\"\n  }, {\n    value: \"vanilla\",\n    label: \"Vanilla\"\n  }];\n\n  const getEmployees = async () => {\n    await http.get(`/employee${queryStatus}`).then(res => {\n      console.log(\"res\", res);\n      setDataTable(res.data);\n      handleBlocking(false);\n    }).catch(err => console.log(err));\n  };\n\n  const hanedleSort = () => {\n    // console.log(queryStatus);\n    getEmployees();\n    setSortFirstName(!sortFirstName); // if (sortFirstName) {\n\n    setQuery(\"?_sort=first_name&_order=asc\"); // } else {\n    //   setQuery({ ...queryStatus, first: \"\" });\n    // }\n    // console.log(\"queryStatus\", queryStatus);\n  };\n\n  useEffect(() => {\n    getEmployees();\n  }, []);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(Navbar.Brand, {\n    href: \"#home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    alt: \"\",\n    src: \"/logo192.png\",\n    width: \"30\",\n    height: \"30\",\n    className: \"d-inline-block align-top mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), \"React Bootstrap\")), __jsx(BlockUi, {\n    tag: \"div\",\n    blocking: blocking,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100 text-sm-right text-center mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Date : \"), __jsx(DatePicker, {\n    locale: \"th\",\n    selected: date,\n    onChange: date => setDate(date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }))), __jsx(Col, {\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"w-100 text-sm-left text-center mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Time : \"), __jsx(DatePicker, {\n    selected: time,\n    onChange: date => setTime(date),\n    showTimeInput: true,\n    showTimeSelectOnly: true,\n    timeCaption: \"Time\",\n    dateFormat: \"HH:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  })))), __jsx(Row, {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"d-flex w-100 px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, __jsx(\"select\", {\n    className: \"form-control\",\n    id: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, \"10\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"20\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, \"30\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }, \"50\"), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, \"100\"))), __jsx(\"div\", {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, __jsx(Pagination, {\n    hideDisabled: true,\n    itemClass: \"page-item\",\n    linkClass: \"page-link\" // firstPageText=\"First\"\n    // lastPageText=\"Last\"\n    ,\n    pageRangeDisplayed: 3,\n    activePage: activePage,\n    itemsCountPerPage: 10,\n    totalItemsCount: 100,\n    onChange: pageNumber => {\n      setActivePage(pageNumber);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }))), __jsx(\"div\", {\n    onClick: () => hanedleSort(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"click\"), __jsx(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"#\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    onClick: () => hanedleSort(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 23\n    }\n  }, \"First Name\"), !sortFirstName && __jsx(\"img\", {\n    src: \"icons/sort-arrows-couple-pointing-up-and-down.png\",\n    height: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }), sortFirstName && __jsx(\"img\", {\n    src: \"icons/sort-up.png\",\n    height: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  })), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, \"Last Name\", __jsx(\"img\", {\n    src: \"icons/sort-arrows-couple-pointing-up-and-down.png\",\n    height: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 23\n    }\n  })), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, \"Gender\", __jsx(\"img\", {\n    src: \"icons/sort-arrows-couple-pointing-up-and-down.png\",\n    height: \"16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }\n  })))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, dataTable && dataTable.map((row, i) => __jsx(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, i + 1), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, row.first_name), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, row.last_name), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, row.gender))))), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/g4rtu1/code-test/nextjs-my-structure-master/pages/index.tsx"],"names":["useState","useEffect","Fragment","DatePicker","registerLocale","th","Container","Navbar","Row","Col","Pagination","BlockUi","axios","http","create","baseURL","headers","App","date","setDate","Date","time","setTime","sortFirstName","setSortFirstName","queryStatus","setQuery","activePage","setActivePage","blocking","handleBlocking","dataTable","setDataTable","options","value","label","getEmployees","get","then","res","console","log","data","catch","err","hanedleSort","pageNumber","map","row","i","first_name","last_name","gender"],"mappings":"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","sourcesContent":["import { useState, useEffect, Fragment } from \"react\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport th from \"date-fns/locale/th\";\r\nimport { Button, Container, Navbar, Row, Col, Table } from \"react-bootstrap\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Select from \"react-select\";\r\nimport BlockUi from \"react-block-ui\";\r\nimport axios from \"axios\";\r\nregisterLocale(\"th\", th);\r\n\r\nconst http = axios.create({\r\n  // baseURL: process.env.api,\r\n  baseURL: \"http://my-json-server.typicode.com/guitarjaku/react-code-test\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [time, setTime] = useState(new Date());\r\n  const [sortFirstName, setSortFirstName] = useState(false);\r\n  const [queryStatus, setQuery] = useState(\"\");\r\n  const [activePage, setActivePage] = useState(1);\r\n  const [blocking, handleBlocking] = useState(true);\r\n  const [dataTable, setDataTable] = useState([]);\r\n\r\n  const options = [\r\n    { value: \"chocolate\", label: \"Chocolate\" },\r\n    { value: \"strawberry\", label: \"Strawberry\" },\r\n    { value: \"vanilla\", label: \"Vanilla\" },\r\n  ];\r\n\r\n  const getEmployees = async () => {\r\n    await http\r\n      .get(`/employee${queryStatus}`)\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        setDataTable(res.data);\r\n        handleBlocking(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const hanedleSort = () => {\r\n    // console.log(queryStatus);\r\n\r\n    getEmployees();\r\n    setSortFirstName(!sortFirstName);\r\n\r\n    // if (sortFirstName) {\r\n    setQuery(\"?_sort=first_name&_order=asc\");\r\n    // } else {\r\n    //   setQuery({ ...queryStatus, first: \"\" });\r\n    // }\r\n    // console.log(\"queryStatus\", queryStatus);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">\r\n          <img\r\n            alt=\"\"\r\n            src={\"/logo192.png\"}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top mr-2\"\r\n          />\r\n          React Bootstrap\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      {/* <Button onClick={() => handleBlocking(!blocking)} color=\"primary\">\r\n        Toggle Block\r\n      </Button> */}\r\n      <BlockUi tag=\"div\" blocking={blocking}>\r\n        <Container fluid className=\"mb-4\">\r\n          <Row>\r\n            <Col xs={12} sm={6}>\r\n              <div className=\"w-100 text-sm-right text-center mt-2\">\r\n                <span>Date : </span>\r\n                <DatePicker\r\n                  locale=\"th\"\r\n                  selected={date}\r\n                  onChange={(date) => setDate(date)}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col xs={12} sm={6}>\r\n              <div className=\"w-100 text-sm-left text-center mt-2\">\r\n                <span>Time : </span>\r\n                <DatePicker\r\n                  selected={time}\r\n                  onChange={(date) => setTime(date)}\r\n                  showTimeInput\r\n                  showTimeSelectOnly\r\n                  timeCaption=\"Time\"\r\n                  dateFormat=\"HH:mm\"\r\n                />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"mt-2\">\r\n            <div className=\"d-flex w-100 px-3\">\r\n              <div className=\"form-group mr-auto\">\r\n                <select className=\"form-control\" id=\"item\">\r\n                  <option>10</option>\r\n                  <option>20</option>\r\n                  <option>30</option>\r\n                  <option>50</option>\r\n                  <option>100</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"text-right\">\r\n                <Pagination\r\n                  hideDisabled\r\n                  itemClass=\"page-item\"\r\n                  linkClass=\"page-link\"\r\n                  // firstPageText=\"First\"\r\n                  // lastPageText=\"Last\"\r\n                  pageRangeDisplayed={3}\r\n                  activePage={activePage}\r\n                  itemsCountPerPage={10}\r\n                  totalItemsCount={100}\r\n                  onChange={(pageNumber) => {\r\n                    setActivePage(pageNumber);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div onClick={() => hanedleSort()}>click</div>\r\n            <Col xs={12}>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>\r\n                      <button onClick={() => hanedleSort()}>First Name</button>\r\n                      {!sortFirstName && (\r\n                        <img\r\n                          src={\r\n                            \"icons/sort-arrows-couple-pointing-up-and-down.png\"\r\n                          }\r\n                          height=\"16\"\r\n                        />\r\n                      )}\r\n                      {sortFirstName && (\r\n                        <img src={\"icons/sort-up.png\"} height=\"16\" />\r\n                      )}\r\n                    </th>\r\n                    <th>\r\n                      Last Name\r\n                      <img\r\n                        src={\r\n                          \"icons/sort-arrows-couple-pointing-up-and-down.png\"\r\n                        }\r\n                        height=\"16\"\r\n                      />\r\n                    </th>\r\n                    {/* <th>Email</th> */}\r\n                    <th>\r\n                      Gender\r\n                      <img\r\n                        src={\r\n                          \"icons/sort-arrows-couple-pointing-up-and-down.png\"\r\n                        }\r\n                        height=\"16\"\r\n                      />\r\n                    </th>\r\n                    {/* <th>IP Address</th> */}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {dataTable &&\r\n                    dataTable.map((row, i) => (\r\n                      <tr key={i}>\r\n                        <td>{i + 1}</td>\r\n                        <td>{row.first_name}</td>\r\n                        <td>{row.last_name}</td>\r\n                        {/* <td>{row.email}</td> */}\r\n                        <td>{row.gender}</td>\r\n                        {/* <td>{row.ip_address}</td> */}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n              <pre></pre>\r\n            </Col>\r\n            <Col xs={12}>{/* <Select options={options} /> */}</Col>\r\n          </Row>\r\n        </Container>\r\n      </BlockUi>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}